name: Release on PR Merge

on:
  pull_request:
    types: [closed]
    branches: [main]

jobs:
  create-release:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: read
    outputs:
      create_release: ${{ steps.extract-version.outputs.create_release }}
      tag: ${{ steps.extract-version.outputs.tag }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Extract version from PR
        id: extract-version
        run: |
          VERSION=$(echo "${{ github.event.pull_request.title }}" | grep -oE '\[v[^]]+\]' | sed 's/\[v//; s/\]//')  
          
          if [[ -z "$VERSION" ]]; then
            echo "No version found in PR title \"${{ github.event.pull_request.title }}\". Skipping release."
            echo "create_release=false" >> $GITHUB_OUTPUT
            exit 0
          fi

          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "tag=v$VERSION" >> $GITHUB_OUTPUT
          echo "create_release=true" >> $GITHUB_OUTPUT

      - name: Check if tag already exists
        if: steps.extract-version.outputs.create_release == 'true'
        id: check-tag
        run: |
          if git rev-parse "v${{ steps.extract-version.outputs.version }}" >/dev/null 2>&1; then
            echo "Tag v${{ steps.extract-version.outputs.version }} already exists. Skipping release."
            exit 1
          fi

      - name: Create and push tag
        if: steps.extract-version.outputs.create_release == 'true'
        run: |
          git tag -a "${{ steps.extract-version.outputs.tag }}" -m "Release ${{ steps.extract-version.outputs.tag }}"
          git push origin "${{ steps.extract-version.outputs.tag }}"

      - name: Create GitHub Release
        if: steps.extract-version.outputs.create_release == 'true'
        uses: actions/github-script@v6
        with:
          script: |
            await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: '${{ steps.extract-version.outputs.tag }}',
              name: 'Release ${{ steps.extract-version.outputs.tag }}',
              draft: false,
              prerelease: false,
              generate_release_notes: true  // true is the same as clicking Generate Release Notes in the UI
            });

      - name: No release created
        if: steps.extract-version.outputs.create_release != 'true'
        run: |
          echo "âœ… PR merged successfully without version tag - no release created"

  build-and-release:
    needs: create-release
    if: needs.create-release.outputs.create_release == 'true'
    uses: ./.github/workflows/release.yml
    with:
      version: ${{ needs.create-release.outputs.tag }}
    secrets: inherit